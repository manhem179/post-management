require('dotenv').config();
const mongoose = require('mongoose');
const User = require('./models/User');
const Post = require('./models/Post');

async function seedData() {
    try {
        // Connect to MongoDB
        await mongoose.connect(process.env.MONGO_URI);
        console.log('‚úÖ Connected to MongoDB');

        // Clear existing data
        await User.deleteMany({});
        await Post.deleteMany({});
        console.log('üóëÔ∏è Cleared existing data');

        // Create sample users
        const users = await User.create([
            { username: 'admin', password: 'admin123' },
            { username: 'user1', password: 'user123' },
            { username: 'user2', password: 'user123' }
        ]);
        console.log('üë• Created sample users');

        // Create sample posts
        const posts = await Post.create([
            {
                title: 'Gi·ªõi thi·ªáu v·ªÅ Node.js',
                content: 'Node.js l√† m·ªôt runtime environment cho JavaScript, cho ph√©p ch·∫°y JavaScript ·ªü server-side. N√≥ ƒë∆∞·ª£c x√¢y d·ª±ng tr√™n V8 JavaScript engine c·ªßa Chrome.',
                author: users[0]._id,
                category: 'tech',
                createdAt: new Date('2024-01-15')
            },
            {
                title: 'L·ª£i √≠ch c·ªßa MongoDB',
                content: 'MongoDB l√† m·ªôt NoSQL database, cung c·∫•p hi·ªáu su·∫•t cao v√† kh·∫£ nƒÉng m·ªü r·ªông t·ªët. N√≥ s·ª≠ d·ª•ng JSON-like documents ƒë·ªÉ l∆∞u tr·ªØ d·ªØ li·ªáu.',
                author: users[1]._id,
                category: 'tech',
                createdAt: new Date('2024-01-16')
            },
            {
                title: 'C√°ch s·ªëng l√†nh m·∫°nh',
                content: 'S·ªëng l√†nh m·∫°nh bao g·ªìm vi·ªác ƒÉn u·ªëng ƒë·∫ßy ƒë·ªß, t·∫≠p th·ªÉ d·ª•c th∆∞·ªùng xuy√™n v√† ng·ªß ƒë·ªß gi·∫•c. ƒêi·ªÅu n√†y gi√∫p c·∫£i thi·ªán s·ª©c kh·ªèe v√† tinh th·∫ßn.',
                author: users[2]._id,
                category: 'lifestyle',
                createdAt: new Date('2024-01-17')
            },
            {
                title: 'Chi·∫øn l∆∞·ª£c kinh doanh hi·ªáu qu·∫£',
                content: 'M·ªôt chi·∫øn l∆∞·ª£c kinh doanh hi·ªáu qu·∫£ c·∫ßn c√≥ m·ª•c ti√™u r√µ r√†ng, ph√¢n t√≠ch th·ªã tr∆∞·ªùng v√† k·∫ø ho·∫°ch th·ª±c hi·ªán c·ª• th·ªÉ.',
                author: users[0]._id,
                category: 'business',
                createdAt: new Date('2024-01-18')
            },
            {
                title: 'B√≥ng ƒë√° Vi·ªát Nam',
                content: 'B√≥ng ƒë√° Vi·ªát Nam ƒë√£ c√≥ nh·ªØng b∆∞·ªõc ti·∫øn ƒë√°ng k·ªÉ trong nh·ªØng nƒÉm g·∫ßn ƒë√¢y, v·ªõi nhi·ªÅu th√†nh t√≠ch qu·ªëc t·∫ø ·∫•n t∆∞·ª£ng.',
                author: users[1]._id,
                category: 'sports',
                createdAt: new Date('2024-01-19')
            },
            {
                title: 'React vs Vue.js',
                content: 'C·∫£ React v√† Vue.js ƒë·ªÅu l√† nh·ªØng framework JavaScript m·∫°nh m·∫Ω. React ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi Facebook, trong khi Vue.js ƒë∆∞·ª£c t·∫°o b·ªüi Evan You.',
                author: users[2]._id,
                category: 'tech',
                createdAt: new Date('2024-01-20')
            }
        ]);
        console.log('üìù Created sample posts');

        console.log('‚úÖ Seed data completed successfully!');
        console.log(`üìä Created ${users.length} users and ${posts.length} posts`);
        
        process.exit(0);
    } catch (error) {
        console.error('‚ùå Error seeding data:', error);
        process.exit(1);
    }
}

seedData(); 